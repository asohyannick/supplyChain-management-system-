import express from 'express';
import createAccount from '../../serviceImpls/user/createAccount/register.impls';
import globalValidator from '../../middleware/globalValidator/globalValidator';
import { updateUserValidationSchema, userLoginValidationSchema, userValidationSchema } from '../../utils/validator';
import signin from '../../serviceImpls/user/login/login.impls';
import userLogout from '../../serviceImpls/user/logout/logout.impl';
import showUsers from '../../serviceImpls/user/showUsers/showUser.impl';
import showUser from '../../serviceImpls/user/showUser/showUser.impl';
import updateUser from '../../serviceImpls/user/updateAccount/updateUser.impl';
import deleteUser from '../../serviceImpls/user/deleteAccount/deleteAccount.impl';
import requestAccessToken from '../../serviceImpls/user/refreshAccessToken/refreshAccessToken.impl';
import resetPassword from '../../serviceImpls/user/resetPassword/resetPassword.impl';
import forgotPassword from '../../serviceImpls/user/forgotPassword/forgotPassword.impl';
const router = express.Router();
router.post('/create-account', globalValidator(userValidationSchema), createAccount);
router.post('/login', globalValidator(userLoginValidationSchema), signin);
router.post('/logout', userLogout);
router.post('/request-access-token', requestAccessToken);
router.post('/forgot-password', forgotPassword);
router.post('/reset-password/:token', resetPassword);
router.get('/show-users', showUsers);
router.get('/show-user/:id', showUser);
router.put('/update-account/:id', globalValidator(updateUserValidationSchema), updateUser);
router.delete('/delete-account/:id', deleteUser);
export default router;